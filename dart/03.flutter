import 'package:flutter/material.dart';

class Player{
  String? name; //= 'nico';
  // ? 는 Player가 name을 가질수도 아닐수도 있다는 뜻

  Player();
  //Player({required this.name});
}

void main() {
  var nico = Player(); // new가 없이도 가능 //name: 'potato'
  //nico.name;
  runApp(App());
}

// 모든 화면과 버튼 등이 App Widget으로부터 올 것임
// StatelessWidget은 그냥 화면단에 띄워주는 역할만 함
class App extends StatelessWidget{

  // build를 작성하고 엔터 누르면 자동완성됨
  @override
  Widget build(BuildContext context) {
    // 구글의 material앱처럼 보이게 하거나 ios앱 느낌으로 Cupertino사용도 가능
    // 커스터마이즈된 UI를 원한다해도 일단 테마를 선택해줘야함.
    return MaterialApp(
      // 그냥 Text()를 사용하면 못생긴 글자가 나와서 Scaffold를 사용해야 함
      // 화면은 scaffold를 가져야한다는 규칙이 있음(flutter의 규칙)
      // 모바일 앱의 모든 화면은 스카폴드가 필요함. 네비게이션 바 등을 구성해줌
      // 스카폴드에는 appBar라는 것도 있음
       home : Scaffold(
         appBar : AppBar(
           centerTitle: true,
           elevation: 10, // 그림자짐
           title : Text('Hello flutter'),
         ),
         body : Center(
           child : Text('Hello world'),
         ),
       ),
    );
  }

}
/*-------------------------------------------------------------------------------------------------------------------------------------*/
import 'package:flutter/material.dart';
import 'package:toonflix3/widgets/button.dart';
import 'package:toonflix3/widgets/currency_card.dart';

class Player{
  String? name;

  Player();
}

void main() {
  var nico = Player();

  runApp(App());
}
/* 첫번째 어플
class App extends StatelessWidget{

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
       home : Scaffold(
         backgroundColor: Color(0xFF181818),
         // SingleChildScrollView를 이용함으로써 화면을 스크롤링할 수 있게됨
         body : SingleChildScrollView(
           child: Padding(
             padding: EdgeInsets.symmetric(horizontal: 20),
             child: Column(
               crossAxisAlignment: CrossAxisAlignment.start,
               children: [
                 SizedBox(
                   height: 80,
                 ),
                 Row(
                   // Colunm의 MainAxis는 수직방향, CrossAxis는 수평방향
                     mainAxisAlignment: MainAxisAlignment.end,
                     children: [
                       Column(
                         crossAxisAlignment: CrossAxisAlignment.end,
                         children: [
                           Text('Hey, Selena',
                             style: TextStyle(
                               color: Colors.white,
                               fontSize: 28,
                               fontWeight: FontWeight.w800,
                             ),
                           ),
                           Text('Welcome back',
                             style: TextStyle(
                               color: Colors.white.withOpacity(0.8),
                               fontSize: 18,
                             ),
                           ),
                         ],
                       )
                     ],
                 ),
                 SizedBox(
                   height: 70,
                 ),
                 Text(
                   'Total Balance',
                   style: TextStyle(
                     fontSize: 22,
                     color: Colors.white.withOpacity(0.8)
                   ),
                 ),
                 SizedBox(
                   height: 5,
                 ),
                 Text(
                   '\$5 194 482', // \를 넣음으로써 $가 변수가 아니라는걸 알림
                   style: TextStyle(
                       fontSize: 44,
                       fontWeight: FontWeight.w600,
                       color: Colors.white
                   ),
                 ),
                 SizedBox(
                   height: 30,
                 ),
                 Row(
                   mainAxisAlignment: MainAxisAlignment.spaceBetween,
                   children: [
                     const Button(
                       text: 'Transfer',
                       bgColor: const Color(0xFFF1B33B),
                       textColor: Colors.black,
                     ),
                     const Button(
                       text: 'Request',
                       bgColor: const Color(0xFF1F2123),
                       textColor: Colors.white,
                     ),
                   ],
                 ),
                 const SizedBox(
                   height: 50,
                 ),
                 Row(
                   // Row에서 main은 가로축, cross는 세로축
                   // Colum에서 main은  세로축, cross는 가로축
                   crossAxisAlignment: CrossAxisAlignment.end,
                   mainAxisAlignment: MainAxisAlignment.spaceBetween,
                   children: [
                   Text('Wallets',
                     style: TextStyle(
                       color: Colors.white,
                       fontSize: 36,
                       fontWeight: FontWeight.w600,
                     )
                   ),
                   Text('View All',
                     style: TextStyle(
                       color: Colors.white.withOpacity(0.8),
                       fontSize: 18,
                     )
                   ),
                 ],),
                 const SizedBox(
                   height: 20,
                 ),
                 CurrencyCard(
                   name: 'Euro',
                   code: 'EUR',
                   amount: '6 428',
                   icon: Icons.euro_rounded,
                   isInverted: false,
                 ),
                 Transform.translate(
                   offset: Offset(0, -20),
                   child: CurrencyCard(
                     name: 'Bitcoin',
                     code: 'BTC',
                     amount: '6 428',
                     icon: Icons.currency_bitcoin,
                     isInverted: true,
                   ),
                 ),
                 Transform.translate(
                   offset: Offset(0, -40),
                   child: CurrencyCard(
                     name: 'Dollar',
                     code: 'USD',
                     amount: '428',
                     icon: Icons.attach_money_outlined,
                     isInverted: false,
                   ),
                 ),
               ],
             ),
           ),
         ),
       ),
    );
  }

}
*/

// Stateless Widget은 build메서드를 통해 단지 UI를 출력. 아무런 데이터가 없음.
// Statefull Widget은 상태를 가지고 있어서 Stateful이라고 불림
class App extends StatefulWidget{
  @override
  State<App> createState() => _AppState();
}

class _AppState extends State<App> {

  /*
  List<int> numbers = [];

  //int counter = 0;

  void onClicked(){
    // setStage는 State클래스에게 데이터가 변경되었다고 알리는 함수
    // 이게 있어야 제대로 작동함
    setState((){
      //counter = counter + 1;
      numbers.add(numbers.length);
      print(numbers);
    });
  } */

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        backgroundColor: const Color(0xFFF4EDDB),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: const [
              MyLargeTitle(),
              //for(var n in numbers) Text('$n'),
              //Text('$counter', style: TextStyle(fontSize: 30,),),
              /*
              IconButton(
                iconSize: 40,
                onPressed: onClicked,
                icon: const Icon(Icons.add_box_rounded),
              ),*/
            ],
          ),
        ),
      ),
    );
  }
}

class MyLargeTitle extends StatelessWidget {
  const MyLargeTitle({
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Text(
      'My Large Title',
      style: TextStyle(fontSize: 30,),
    );
  }
}

